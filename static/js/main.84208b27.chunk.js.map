{"version":3,"sources":["App.js","serviceWorker.js","index.js","helpers.js"],"names":["Scrollable","lazy","Query","Place","PlaceDetails","PlaceDetailsPlaceholder","AddRestaurantForm","AddReviewForm","window","places","markers","App","isLoaded","useLoadScript","googleMapsApiKey","process","libraries","React","useState","query","setQuery","lat","lng","centerPosition","setCenterPosition","userPosition","setUserPosition","setPlaces","placeId","setPlaceId","map","setMap","service","setService","minRating","setMinRating","maxRating","setMaxRating","showAddReview","setShowAddReview","showAddRestaurant","setShowAddRestaurant","locationClicked","setLocationClicked","showPlaceDetails","getPlaceDetailsQuery","useCallback","getPlaceDetails","filteredPlaces","useMemo","getSortedPlaces","getFilteredPlaces","useEffect","getCurrentPosition","then","position","catch","noop","google","maps","Marker","icon","url","scaledSize","width","height","labelOrigin","x","y","label","setCenter","getNearbyPlaces","result","Object","prototype","hasOwnProperty","call","cleanMarkers","values","reduce","accumulator","location","id","rating","marker","fontFamily","fontWeight","fontSize","color","text","toFixed","addListener","handleKeyboardNavigationPlaces","e","preventDefault","next","target","nextSibling","previous","previousSibling","key","focus","console","log","className","htmlFor","role","tabIndex","name","value","placeholder","onChange","length","onKeyDown","onClick","range","option","persist","restaurant","cover","types","ratings","handleClick","size","loading","error","data","refetch","place","handleClose","handleClickAddReview","handleSubmit","review","reviews","setLabel","toString","state","addNewReview","handleCancel","mapContainerStyle","center","zoom","onLoad","PlacesService","latLng","toJSON","onBoundsChanged","debounce","getCenter","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","library","add","fas","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","start","end","Array","from","Number","parseInt","_","k","getDataURI","file","a","maxFileSize","Promise","resolve","reject","sizeInMb","reader","FileReader","onload","onerror","onabort","readAsDataURL","alert","geolocation","coords","latitude","longitude","enableHighAccuracy","timeout","maximumAge","nearbySearch","radius","type","PlacesServiceStatus","OK","normalizePlaces","getDetails","fields","normalizePlace","place_id","photos","getUrl","user_ratings_total","geometry","international_phone_number","opening_hours","isOpen","website","vicinity","formatted_address","maxWidth","maxHeight","slice","replace","phoneNumber","gmap","address","getSortedReviews","normalizeReviews","avatar","profile_photo_url","author","author_name","comment","time","date","Date","normalizeReview","sort","left","right","getTime","filter","toLowerCase","includes","gmapEncodeURI","uri","encodeURIComponent","uniqid","Math","random","forEach","func","timer","delay","debounced","args","clearTimeout","setTimeout"],"mappings":"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","file":"static/js/main.84208b27.chunk.js","sourcesContent":["import React from 'react';\nimport { useLoadScript, GoogleMap } from '@react-google-maps/api';\nimport lazy from '@loadable/component';\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome';\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\nimport {\n  getCurrentPosition,\n  getNearbyPlaces,\n  getPlaceDetails,\n  getFilteredPlaces,\n  getSortedPlaces,\n  cleanMarkers,\n  range,\n  debounce,\n  noop,\n} from './helpers';\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\nconst Scrollable = lazy(() => import('./components/Scrollable'));\nconst Query = lazy(() => import('./components/Query'));\nconst Place = lazy(() => import('./components/Place'));\nconst PlaceDetails = lazy(() => import('./components/PlaceDetails'));\nconst PlaceDetailsPlaceholder = lazy(() => import('./components/PlaceDetailsPlaceholder'));\nconst AddRestaurantForm = lazy(() => import('./components/AddRestaurantForm'));\nconst AddReviewForm = lazy(() => import('./components/AddReviewForm'));\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\nwindow.places = {};\nwindow.markers = {};\n\nfunction App() {\n  const { isLoaded } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GMAPS_API_KEY,\n    libraries: ['places'],\n  });\n  const [query, setQuery] = React.useState('');\n  const [centerPosition, setCenterPosition] = React.useState({ lat: 0, lng: 0 });\n  const [userPosition, setUserPosition] = React.useState(null);\n  const [places, setPlaces] = React.useState({});\n  const [placeId, setPlaceId] = React.useState(null);\n  const [map, setMap] = React.useState(null);\n  const [service, setService] = React.useState(null);\n  const [minRating, setMinRating] = React.useState(0);\n  const [maxRating, setMaxRating] = React.useState(5);\n  const [showAddReview, setShowAddReview] = React.useState(false);\n  const [showAddRestaurant, setShowAddRestaurant] = React.useState(false);\n  const [locationClicked, setLocationClicked] = React.useState({ lat: 0, lng: 0 });\n  const showPlaceDetails = !!placeId;\n\n  const getPlaceDetailsQuery = React.useCallback(() => getPlaceDetails(service, placeId), [\n    service,\n    placeId,\n  ]);\n\n  const filteredPlaces = React.useMemo(\n    () => getSortedPlaces(getFilteredPlaces(places, query, minRating, maxRating)),\n    [places, query, minRating, maxRating]\n  );\n\n  React.useEffect(() => {\n    getCurrentPosition()\n      .then(position => setUserPosition(position))\n      .catch(noop);\n  }, []);\n\n  React.useEffect(() => {\n    if (!map || !userPosition) return;\n\n    new window.google.maps.Marker({\n      map,\n      position: userPosition,\n      icon: {\n        url: 'images/marker.png',\n        scaledSize: { width: 32, height: 48 },\n        labelOrigin: { x: 16, y: 18 },\n      },\n      label: '😊',\n    });\n\n    setCenterPosition(userPosition);\n  }, [map, userPosition]);\n\n  React.useEffect(() => {\n    if (!map) return;\n\n    map.setCenter(centerPosition);\n  }, [map, centerPosition]);\n\n  React.useEffect(() => {\n    if (!service) return;\n\n    getNearbyPlaces(service, centerPosition)\n      .then(result => setPlaces(result))\n      .catch(noop);\n  }, [service, centerPosition]);\n\n  React.useEffect(() => {\n    if (!placeId) return;\n\n    if (!Object.prototype.hasOwnProperty.call(places, placeId)) {\n      setPlaceId(null);\n    }\n  }, [places, placeId]);\n\n  React.useEffect(() => {\n    if (!map) return;\n\n    cleanMarkers();\n\n    const markers = Object.values(filteredPlaces).reduce(\n      (accumulator, { location: position, id, rating }) => {\n        const marker = new window.google.maps.Marker({\n          map,\n          position,\n          icon: {\n            url: 'images/marker.png',\n            scaledSize: { width: 32, height: 48 },\n            labelOrigin: { x: 16, y: 18 },\n          },\n          label: {\n            fontFamily: '\"Montserrat\", sans-serif',\n            fontWeight: '600',\n            fontSize: '12px',\n            color: '#fff',\n            text: rating > 0 ? rating.toFixed(1) : 'N',\n          },\n        });\n\n        marker.addListener('click', () => setPlaceId(id));\n\n        accumulator[id] = marker;\n\n        return accumulator;\n      },\n      {}\n    );\n\n    window.markers = markers;\n  }, [map, filteredPlaces]);\n\n  const addNewRestaurant = data => {\n    window.places[data.id] = data;\n\n    setPlaces(state => ({ ...state, [data.id]: window.places[data.id] }));\n    setShowAddRestaurant(false);\n  };\n\n  const addNewReview = (data, place) => {\n    const reviews = [data, ...place.reviews];\n    const rating = place.rating\n      ? // Incremental Average:\n        // Formula: ( ( ( Total Count - 1 ) * Previous Rating (AVG) ) + New Rating ) / Total Count\n        (place.ratings * place.rating + data.rating) / (place.ratings + 1)\n      : data.rating;\n    const ratings = place.ratings + 1;\n\n    window.places[place.id] = {\n      ...place,\n      rating,\n      ratings,\n      reviews,\n    };\n    window.markers[place.id].setLabel(rating.toString());\n\n    setPlaces(state => ({ ...state, [place.id]: window.places[place.id] }));\n    setShowAddReview(false);\n  };\n\n  const handleKeyboardNavigationPlaces = React.useCallback(e => {\n    e.preventDefault();\n\n    const next = e.target.nextSibling;\n    const previous = e.target.previousSibling;\n\n    switch (e.key) {\n      case 'ArrowUp':\n      case 'ArrowLeft':\n        if (previous) {\n          previous.focus();\n        }\n        break;\n      case 'ArrowDown':\n      case 'ArrowRight':\n        if (next) {\n          next.focus();\n        }\n        break;\n      default:\n        break;\n    }\n  }, []);\n\n  console.log(userPosition, centerPosition);\n\n  return (\n    <div className=\"absolute inset-0\">\n      <div className=\"flex relative w-full h-full overflow-hidden\">\n        <div className=\"flex-initial relative w-full max-w-xl h-full shadow-xl z-50\">\n          <div className=\"flex flex-col w-full h-full\">\n            <header className=\"flex-none\">\n              <nav className=\"flex py-4 border-b\">\n                <div className=\"w-full px-6\">\n                  <div className=\"flex items-center h-12 shadow-md rounded\">\n                    <label className=\"w-full\" htmlFor=\"query\">\n                      <div className=\"flex\">\n                        <div\n                          className=\"flex flex-initial w-10 h-10 items-center justify-center cursor-pointer\"\n                          role=\"button\"\n                          tabIndex=\"0\"\n                        >\n                          <Icon className=\"text-gray-900\" icon=\"search\" />\n                        </div>\n                        <input\n                          id=\"query\"\n                          className=\"flex-auto h-10 font-bold text-gray-900 placeholder-gray-600 rounded\"\n                          name=\"query\"\n                          value={query}\n                          placeholder=\"Search a Restaurant\"\n                          onChange={e => setQuery(e.target.value)}\n                        />\n                        {query.length > 0 && (\n                          <div\n                            className=\"flex flex-initial w-10 h-10 items-center justify-center cursor-pointer\"\n                            tabIndex=\"0\"\n                            role=\"button\"\n                            onKeyDown={e => {\n                              if (e.key === ' ' || e.key === 'Enter' || e.key === 'Spacebar') {\n                                e.preventDefault();\n\n                                setQuery('');\n                              }\n                            }}\n                            onClick={() => setQuery('')}\n                          >\n                            <Icon className=\"text-gray-900\" icon=\"times\" />\n                          </div>\n                        )}\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"flex mt-3\">\n                    <div className=\"flex-1\">\n                      <select\n                        className=\"w-full h-12 px-4 font-bold text-gray-900 bg-gray-200 shadow-inner appearance-none rounded\"\n                        value={minRating}\n                        onChange={e => setMinRating(+e.target.value)}\n                      >\n                        <option key=\"min-rating-option-0\" value=\"0\">\n                          New\n                        </option>\n                        {range(1, 5).map(option => (\n                          <option key={`min-rating-option-${option}`} value={option}>\n                            {option} (Star{option > 1 ? 's' : ''})\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    <div className=\"flex items-center justify-center w-12\">\n                      <span className=\"font-bold\">⯈</span>\n                    </div>\n                    <div className=\"flex-1\">\n                      <select\n                        className=\"w-full h-12 px-4 font-bold text-gray-900 bg-gray-200 shadow-inner appearance-none rounded\"\n                        value={maxRating}\n                        onChange={e => setMaxRating(+e.target.value)}\n                      >\n                        {range(minRating + 1, 6).map(option => (\n                          <option key={`max-rating-option-${option}`} value={option}>\n                            {option} (Star{option > 1 ? 's' : ''})\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              </nav>\n            </header>\n            <div className=\"flex-1 relative max-h-full\">\n              <div className=\"absolute inset-0\">\n                <div className=\"relative w-full h-full max-h-full overflow-x-hidden overflow-y-scroll\">\n                  <main\n                    className=\"p-6\"\n                    onKeyDown={e => {\n                      e.persist();\n\n                      handleKeyboardNavigationPlaces(e);\n                    }}\n                  >\n                    {filteredPlaces.length > 0 ? (\n                      <>\n                        {filteredPlaces.map(restaurant => (\n                          <Place\n                            key={restaurant.id}\n                            id={restaurant.id}\n                            name={restaurant.name}\n                            cover={restaurant.cover}\n                            types={restaurant.types}\n                            rating={restaurant.rating}\n                            ratings={restaurant.ratings}\n                            handleClick={e => {\n                              e.preventDefault();\n\n                              setPlaceId(restaurant.id);\n                            }}\n                          />\n                        ))}\n                      </>\n                    ) : (\n                      <>\n                        <div className=\"flex items-center justify-center mb-6\">\n                          <Icon className=\"text-purple-400\" icon=\"sad-tear\" size=\"5x\" />\n                        </div>\n                        <div className=\"text-2xl font-bold text-gray-900 text-center\">\n                          No Results!\n                        </div>\n                        <div className=\"text-gray-700 text-center\">\n                          Sorry there are no results for this search. Please try again.\n                        </div>\n                      </>\n                    )}\n                  </main>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {showPlaceDetails && (\n          <Query query={getPlaceDetailsQuery}>\n            {({ loading, error, data, refetch }) => (\n              <>\n                {loading ? (\n                  <div className=\"absolute left-xl w-full max-w-lg h-screen bg-white z-10\">\n                    <Scrollable key={placeId}>\n                      <PlaceDetailsPlaceholder />\n                    </Scrollable>\n                  </div>\n                ) : (\n                  <>\n                    {error.length > 0 ? null : (\n                      <>\n                        <div\n                          role=\"dialog\"\n                          tabIndex=\"0\"\n                          className=\"absolute left-xl w-full max-w-lg h-screen bg-white z-10\"\n                        >\n                          <Scrollable key={placeId}>\n                            <PlaceDetails\n                              place={data}\n                              handleClose={e => {\n                                e.preventDefault();\n\n                                setPlaceId(null);\n                              }}\n                              handleClickAddReview={() => setShowAddReview(true)}\n                            />\n                          </Scrollable>\n                        </div>\n\n                        {showAddReview && (\n                          <div className=\"absolute left-xl w-full max-w-lg h-screen z-20\">\n                            <div className=\"absolute inset-0 bg-black opacity-50 -z-1\" />\n\n                            <div className=\"p-6\">\n                              <AddReviewForm\n                                handleSubmit={(e, review) => {\n                                  e.preventDefault();\n\n                                  addNewReview(review, data);\n                                  refetch();\n                                }}\n                                handleCancel={e => {\n                                  e.preventDefault();\n\n                                  setShowAddReview(false);\n                                }}\n                              />\n                            </div>\n                          </div>\n                        )}\n                      </>\n                    )}\n                  </>\n                )}\n              </>\n            )}\n          </Query>\n        )}\n\n        {showAddRestaurant && (\n          <div className=\"absolute left-xl w-full max-w-lg h-screen z-20\">\n            <div className=\"absolute inset-0 bg-black opacity-50 -z-1\" />\n            <div className=\"p-6\">\n              <AddRestaurantForm\n                handleSubmit={(e, restaurant) => {\n                  e.preventDefault();\n\n                  addNewRestaurant(restaurant);\n                }}\n                handleCancel={() => setShowAddRestaurant(false)}\n                location={locationClicked}\n              />\n            </div>\n          </div>\n        )}\n\n        <div className=\"flex flex-auto relative\">\n          {isLoaded ? (\n            <>\n              <GoogleMap\n                mapContainerStyle={{ width: '100%' }}\n                center={userPosition}\n                zoom={16}\n                onLoad={map => {\n                  setMap(map);\n                  setService(new window.google.maps.places.PlacesService(map));\n                }}\n                onClick={e => {\n                  setLocationClicked(e.latLng.toJSON());\n                  setShowAddRestaurant(true);\n                }}\n                onBoundsChanged={debounce(() => {\n                  setCenterPosition(map.getCenter());\n                })}\n              >\n                <></>\n              </GoogleMap>\n            </>\n          ) : (\n            <>Loading...</>\n          )}\n          {/* <div ref={mapRef} className=\"absolute inset-0\" /> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport './styles.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nlibrary.add(fas);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n","/**\n * range\n * @param {Number} start\n * @param {Number} end\n * @return {Number[]}\n */\nexport const range = (start, end) =>\n  Array.from(\n    { length: Number.parseInt(end, 10) - Number.parseInt(start) },\n    (_, k) => k + Number.parseInt(start)\n  );\n\n/**\n * getDataURI\n * @param {File} file\n * @param {?Number} maxFileSize the max file size in mb by default is 2.\n */\nexport const getDataURI = async (file, maxFileSize = 2) =>\n  new Promise((resolve, reject) => {\n    const sizeInMb = (file.size / 1e6).toFixed(3);\n\n    if (sizeInMb < maxFileSize) {\n      const reader = new FileReader();\n\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = () => reject();\n      reader.onabort = () => reject();\n\n      reader.readAsDataURL(file);\n    } else {\n      window.alert(\n        `Your file has ${sizeInMb}mb. The max is ${maxFileSize}mb. Please try again with another file.`\n      );\n\n      reject();\n    }\n  });\n\n/**\n * getCurrentPosition\n * @return {Promise}\n */\nexport const getCurrentPosition = async () =>\n  new Promise((resolve, reject) => {\n    if ('geolocation' in window.navigator) {\n      window.navigator.geolocation.getCurrentPosition(\n        ({ coords: { latitude: lat, longitude: lng } }) => {\n          resolve({ lat, lng });\n        },\n        () => reject(),\n        {\n          enableHighAccuracy: true,\n          timeout: 5000,\n          maximumAge: 0,\n        }\n      );\n    } else {\n      reject();\n    }\n  });\n\n/**\n * getNearbyPlaces\n * @param {google.maps.places.PlacesService} service instance of PlacesService (https://developers.google.com/maps/documentation/javascript/reference/places-service)\n * @param {google.maps.LatLng} location instance of LatLng (https://developers.google.com/maps/documentation/javascript/reference/coordinates#LatLng)\n * @return {Promise}\n */\nexport const getNearbyPlaces = async (service, location) =>\n  new Promise((resolve, reject) => {\n    service.nearbySearch(\n      { location, radius: 500, type: ['restaurant'] },\n      (places, status) => {\n        switch (status) {\n          case window.google.maps.places.PlacesServiceStatus.OK:\n            resolve(normalizePlaces(places));\n            break;\n          default:\n            resolve({});\n            break;\n        }\n      },\n      () => reject()\n    );\n  });\n\n/**\n * getPlaceDetails\n * @param {google.maps.places.PlacesService} service instance of PlacesService (https://developers.google.com/maps/documentation/javascript/reference/places-service)\n * @param {String} placeId\n * @return {Promise}\n */\nexport const getPlaceDetails = async (service, placeId) =>\n  new Promise((resolve, reject) => {\n    if (Object.prototype.hasOwnProperty.call(window.places, placeId)) {\n      resolve(window.places[placeId]);\n    } else {\n      service.getDetails(\n        {\n          placeId,\n          fields: [\n            'place_id',\n            'name',\n            'type',\n            'reviews',\n            'user_ratings_total',\n            'formatted_address',\n            'photos',\n            'international_phone_number',\n            'url',\n            'rating',\n            'geometry',\n            'vicinity',\n            'website',\n          ],\n        },\n        (place, status) => {\n          if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n            window.places[placeId] = normalizePlace(place);\n\n            resolve(window.places[placeId]);\n          } else {\n            reject();\n          }\n        }\n      );\n    }\n  });\n\n/**\n * normalizePlace\n * @param {Object} RawPlaceObject\n * @return {Object}\n */\nexport const normalizePlace = ({\n  place_id = '',\n  name = '',\n  photos = [{ getUrl: () => null }],\n  types = [],\n  rating = 0,\n  user_ratings_total = 0,\n  geometry: { location },\n  international_phone_number = '',\n  opening_hours: { isOpen = () => true } = {},\n  website = '',\n  vicinity = '',\n  formatted_address = '',\n  reviews = [],\n  url = '',\n}) => ({\n  id: place_id,\n  cover: photos[0].getUrl({ maxWidth: 570, maxHeight: 260 }),\n  types: types.slice(-8).map(type => type.replace(/_/g, ' ')),\n  phoneNumber: international_phone_number,\n  gmap: url,\n  address: formatted_address || vicinity,\n  ratings: user_ratings_total,\n  reviews: getSortedReviews(normalizeReviews(reviews)),\n  rating,\n  isOpen,\n  website,\n  name,\n  location,\n});\n\n/**\n * normalizePlaces\n * @param {Object[]} places\n * @return {Object<string, Object>}\n */\nexport const normalizePlaces = places =>\n  places.reduce((accumulator, place) => {\n    accumulator[place.place_id] = normalizePlace(place);\n\n    return accumulator;\n  }, {});\n\n/**\n * normalizeReview\n * @param {Object} RawReviewObject\n * @return {Object}\n */\nexport const normalizeReview = ({\n  profile_photo_url: avatar,\n  author_name: author,\n  text: comment,\n  time,\n}) => ({\n  date: new Date(time * 1000),\n  avatar,\n  author,\n  comment,\n});\n\n/**\n * normalizeReviews\n * @param {Object[]} reviews\n * @return {Object[]}\n */\nexport const normalizeReviews = reviews => reviews.map(review => normalizeReview(review));\n\n/**\n * getSortedReviews\n * @param {Object[]} reviews\n * @return {Object[]}\n */\nexport const getSortedReviews = reviews =>\n  [...reviews].sort((left, right) => right.date.getTime() - left.date.getTime());\n\n/**\n * getFilteredPlaces\n * @param {Object<string, Object>} places\n * @param {String} query\n * @param {Number} minRating\n * @param {Number} maxRating\n * @return {Object[]}\n */\nexport const getFilteredPlaces = (places, query, minRating, maxRating) =>\n  Object.values(places).filter(\n    ({ name, rating }) =>\n      name.toLowerCase().includes(query.toLowerCase()) && rating >= minRating && rating <= maxRating\n  );\n\n/**\n * getSortedPlaces\n * @param {Object[]} places\n * @return {Object[]}\n */\nexport const getSortedPlaces = places =>\n  [...places].sort((left, right) => right.rating - left.rating);\n\n/**\n * noop\n */\nexport const noop = () => {};\n\n/**\n * gmapEncodeURI\n * @param {String} uri\n * @return {String}\n */\nexport const gmapEncodeURI = uri => (uri ? window.encodeURIComponent(uri) : '');\n\n/**\n * uniqid\n * @return {String} return a random string\n */\nexport const uniqid = () => (new Date().getTime() * Math.random()).toString(32).replace('.', '');\n\n/**\n * cleanMarkers\n */\nexport const cleanMarkers = () =>\n  Object.values(window.markers).forEach(marker => marker.setMap(null));\n\n/**\n * debounce\n * @param {*} func\n * @param {*} delay in milli-seconds\n */\nexport const debounce = (func, delay = 150) => {\n  let timer;\n\n  const debounced = (...args) => {\n    window.clearTimeout(timer);\n\n    timer = window.setTimeout(() => func(...args), delay);\n  };\n\n  return debounced;\n};\n"],"sourceRoot":""}